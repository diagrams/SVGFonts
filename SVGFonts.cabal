Name:             SVGFonts
Version:          1.6.0.3
Synopsis:         Fonts from the SVG-Font format
Description:      Native font support for the diagrams framework (<http://projects.haskell.org/diagrams/>). Note that this package can be used with any diagrams backend, not just the SVG backend.  The SVG-font format is easy to parse
                  and was therefore chosen for a font library completely written in Haskell.
                  .
                  You can convert your own font to SVG with <http://fontforge.github.io/>,
                  or use the included LinLibertine and Bitstream fonts.
                  .
                  Features:
                  .
                  * Complete implementation of the features that Fontforge produces (though not the complete SVG format)
                  .
                  * Kerning (/i.e./ the two characters in \"VA\" are closer than the characters in \"VV\")
                  .
                  * Unicode
                  .
                  * Ligatures
                  .
                  * An example that shows how to do text boxes with syntax highlighting using highlighting-kate:
                    <http://hackage.haskell.org/package/highlighting-kate>
                  .
                  XML speed issues can be solved by trimming the svg file to only those characters that are used (or maybe binary xml one day).
                  .
                  Version 1.0 of this library supports texturing, though this only makes sense in a diagrams backend that does rasterization in Haskell, such as diagrams-rasterific.
                  .
                  Example:
                  .
                  >  # LANGUAGE NoMonomorphismRestriction #
                  >
                  > import Diagrams.Prelude
                  > import Diagrams.Backend.Rasterific.CmdLine
                  > import Graphics.SVGFonts
                  >
                  > main = defaultMain (text' "Hello World")
                  >
                  > text'   t = stroke (textSVG t 1) # fc purple # fillRule EvenOdd
                  > text''  t = stroke (textSVG' (TextOpts lin INSIDE_H KERN False 1 1) t) # fillRule EvenOdd
                  > text''' t =        (textSVG_ (TextOpts lin INSIDE_H KERN True  1 1) t) # fillRule EvenOdd
                  .
category:         Graphics
License:          BSD3
License-file:     LICENSE
Author:           Tillmann Vogt
Maintainer:       diagrams-discuss@googlegroups.com
build-type:       Simple
Cabal-Version:    >=1.18

data-files:       fonts/*.svg
extra-source-files: CHANGES.md, README.md, diagrams/*.svg
extra-doc-files:    diagrams/*.svg
Tested-with:      GHC == 7.6.3, GHC == 7.8.4, GHC == 7.10.2, GHC == 8.0.1, GHC == 8.2.1
source-repository head
  type: git
  location: https://github.com/diagrams/SVGFonts.git

Library
    hs-source-dirs: src
    ghc-options: -W -Wall -fno-warn-unused-do-bind
    other-modules: Paths_SVGFonts
    build-depends:
        attoparsec,
        base == 4.*,
        bytestring >= 0.10 && < 1.0,
        cereal,
        cereal-vector,
        containers >= 0.4 && < 0.6,
        data-default-class < 0.2,
        diagrams-core >= 1.3 && < 1.5,
        diagrams-lib >= 1.3 && < 1.5,
        directory >= 1.1,
        blaze-svg >= 0.3.3,
        blaze-markup >= 0.5,
        parsec,
        split,
        text,
        tuple,
        vector,
        xml
    exposed-modules:
        Graphics.SVGFonts
        Graphics.SVGFonts.Text
        Graphics.SVGFonts.ReadFont
        Graphics.SVGFonts.Fonts
        Graphics.SVGFonts.CharReference
        Graphics.SVGFonts.ReadPath
        Graphics.SVGFonts.WriteFont
    default-language: Haskell2010
